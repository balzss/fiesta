{"version":3,"sources":["utils/data_storage_utils.js","utils/webRTC_utils.js","components/Host.js","components/ChatBubble.js","components/UserList.js","components/Chat.js","components/Player.js","components/ChangeVideo.js","components/Party.js","components/Router.js","serviceWorker.js","index.js"],"names":["store_data","key","data","localStorage","setItem","btoa","JSON","stringify","encode_base64","update_data","data_key","value","get_data","getItem","parse","atob","decode_base64","createConnection","is_host","host_id","previous_id","Promise","resolve","reject","peer_js_url","process","REACT_APP_PEERJS","turn_url","REACT_APP_TURN","turn_username","REACT_APP_TURN_USERNAME","turn_credentials","REACT_APP_TURN_CREDENTIALS","Peer","window","settings","debug","config","iceServers","urls","host","port","path","push","username","credential","peer","peer_obj","handle_connection","connect","on","id","peer_id","conn","console","log","global_this_obj","notify","data_type","chat_handler","connect_to_peer","state","youtube_video_id","setState","videoId","youtube_current_pos","Math","ceil","startSeconds","player_state","event","isStateChangeFromBroadcastData","player","yt_player","seekTo","pauseVideo","user_name","playVideo","setPlaybackRate","playbackRate","setTimeout","handle_youtube","connected_users","color_code","sync_video","broadcastData","user_list","only_host_controls","handle_intro","handle_intro_init","change_video","video_id","data_handler","left_user_name","connections","msg","i","length","send","broadcast_new_connection","forEach","chat_data","chat_log","message","decodeURIComponent","escape","send_chat","msg_json","user_type","unescape","encodeURIComponent","time_stamp","Date","now","generate_chat_structure","payloadData","fetch_current_video_status","yt_event","getPlayerState","getVideoData","getCurrentTime","getPlaybackRate","introduce","broadcast","loadVideoById","format","parseIdFromURL","url","match","Host","useState","userName","setUserName","videoUrl","setVideoUrl","clipboardHasVideo","setClipboardHasVideo","hostPeerId","setHostPeerId","submitted","setSubmitted","useEffect","navigator","clipboard","readText","then","text","isHost","onlyHostControls","to","pathname","className","onSubmit","e","preventDefault","peerId","placeholder","type","onChange","target","required","style","flex","name","marginRight","ChatBubble","this","props","React","Component","UserList","connectedUsers","Object","entries","map","userInfo","class","Chat","add_text","send_message","chatBottom","createRef","current","scrollIntoView","behavior","index","ref","Player","loadScript","YT","loadVideo","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","maxPlayerWidth","round","innerWidth","maxPlayerHeight","innerHeight","playerWidth","min","playerHeight","width","height","playerVars","start","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","onPlaybackRateChange","onPlayerPlaybackRateChange","PlayerState","PLAYING","PAUSED","ChangeVideo","changeVideo","video_url","getRandomTagColor","bulmaTagColors","floor","random","Party","invite_popup_shown","copyToClipboard","copy_invite","select","execCommand","closeModal","timeout","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toastId","hostId","params","colorCode","reconnect_users","peer_ids","host_data","wait_time","bulk_connect","keys","newestOnTop","rtl","pauseOnFocusLoss","aria-label","onClick","location","href","readOnly","role","Router","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.fdc0ca7e.chunk.js","sourcesContent":["export function encode_base64(data) {\n  return btoa(JSON.stringify(data));\n}\n\nexport function decode_base64(data) {\n  return JSON.parse(atob(data));\n}\n\nexport function store_data(key, data) {\n  localStorage.setItem(key, encode_base64(data));\n}\n\nexport function storeData(key, data) {\n  store_data(key, data);\n}\n\nexport function update_data(data_key, key, value) {\n  var data = get_data(data_key);\n  if (!data) {\n    return false;\n  }\n  data[key] = value;\n  store_data(data_key, data);\n}\n\nexport function get_data(key) {\n  var data = localStorage.getItem(key);\n  if (data) {\n    return decode_base64(data);\n  }\n  return false;\n}\n","import { update_data } from \"./data_storage_utils\";\n\nexport var global_this_obj = null;\n\nexport const createConnection = (is_host, host_id = null, previous_id = null) =>\n  new Promise((resolve, reject) => {\n    let peer_js_url = process.env.REACT_APP_PEERJS;\n    let turn_url = process.env.REACT_APP_TURN;\n    let turn_username = process.env.REACT_APP_TURN_USERNAME;\n    let turn_credentials = process.env.REACT_APP_TURN_CREDENTIALS;\n    const Peer = window.Peer;\n    const settings = {\n      debug: 2,\n      // iceTransportPolicy: \"relay\",\n      config: {\n        iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }]\n      }\n    };\n    if (peer_js_url) {\n      settings.host = peer_js_url;\n      settings.port = \"\";\n      settings.path = \"/myapp\";\n    }\n    if (turn_url) {\n      settings.config.iceServers.push({\n        urls: turn_url,\n        username: turn_username,\n        credential: turn_credentials\n      });\n    }\n\n    const peer = previous_id ? new Peer(previous_id, settings) : new Peer(settings);\n\n    window.peer_obj = peer;\n    window.is_host = is_host;\n    if (!is_host) {\n      var conn = peer.connect(host_id);\n      handle_connection(conn);\n    }\n\n    peer.on(\"open\", function(id) {\n      window.peer_id = peer.id;\n      resolve(peer.id, window.is_host);\n    });\n\n    //   Initializes connection\n    peer.on(\"connection\", function(conn) {\n      console.log(\"connection called\");\n      handle_connection(conn);\n    });\n\n    peer.on(\"close\", function() {\n      console.log(\"peer closed\");\n      window.global_this_obj.notify(\"Network disconnected please refresh\", 10000);\n    });\n\n    peer.on(\"disconnected\", function() {\n      console.log(\"peer disconnected\");\n      // peer.reconnect();\n      window.global_this_obj.notify(\"Network disconnected please refresh\", 10000);\n    });\n  });\n\nfunction handle_connection(conn) {\n  conn.on(\"data\", function(data) {\n    data_handler(data);\n  });\n\n  conn.on(\"close\", function() {\n    var connected_users = window.global_this_obj.state.connected_users;\n    if (!connected_users || !connected_users[conn.peer]) {\n      return;\n    }\n    const left_user_name = connected_users[conn.peer].user_name;\n    delete connected_users[conn.peer];\n    window.global_this_obj.setState({ connected_users: connected_users });\n    window.global_this_obj.notify(`${left_user_name} has left the party`);\n    if (window.is_host) {\n      update_data(window.peer_obj.id, \"connected_users\", connected_users);\n    }\n  });\n\n  window.connections.push(conn);\n\n  if (window.is_host === true) {\n    broadcast_new_connection(conn.peer);\n  }\n}\n\nfunction data_handler(data) {\n  if (typeof data === \"object\" && data !== null) {\n    if (data.data_type === \"chat\") {\n      chat_handler(data);\n    } else if (data.data_type === \"new_connection\") {\n      connect_to_peer(data.peer_id);\n    } else if (data.data_type === \"youtube\") {\n      handle_youtube(data);\n    } else if (data.data_type === \"intro\") {\n      handle_intro(data);\n    } else if (data.data_type === \"user_list\") {\n      handle_intro_init(data);\n    } else if (data.data_type === \"change_video\") {\n      change_video(data.video_id);\n    }\n  }\n}\n\nfunction broadcastData(data) {\n  window.connections.forEach((conn) => {\n    conn.send(data);\n  });\n}\n\nfunction broadcast_new_connection(peer_id) {\n  var msg = { data_type: \"new_connection\", peer_id: peer_id };\n  for (var i = 0; i < window.connections.length; i++) {\n    if (window.connections[i].peer === peer_id) {\n      continue;\n    }\n    window.connections[i].send(msg);\n  }\n}\n\nfunction connect_to_peer(peer_id) {\n  const conn = window.peer_obj.connect(peer_id);\n  handle_connection(conn);\n}\n\nexport function bulk_connect(peer_ids, host_data) {\n  for (let id in peer_ids) {\n    setTimeout(function() {\n      connect_to_peer(peer_ids[id]);\n    }, 250);\n  }\n  const wait_time = 250 * peer_ids.length + 100;\n  setTimeout(function() {\n    console.log(\"intro called\");\n    introduce(host_data.user_name, host_data.color_code);\n  }, wait_time);\n}\n// Chat utils\nfunction chat_handler(chat_data) {\n  var chat_log = window.global_this_obj.state.chat_log;\n  chat_data.message = decodeURIComponent(\n    escape(window.atob(chat_data.message))\n  );\n\n  chat_log.push(chat_data);\n  window.global_this_obj.setState({\n    chat_log: chat_log\n  });\n}\n\nexport function send_chat(msg, user_name, is_host, color_code) {\n  var msg_json = generate_chat_structure(msg, user_name, is_host, color_code);\n  broadcastData(msg_json);\n  chat_handler(msg_json);\n}\n\nfunction generate_chat_structure(msg, user_name, is_host, color_code) {\n  var format = {\n    data_type: \"chat\",\n    user_name: user_name,\n    user_type: is_host ? \"Host\" : \"Client\",\n    message: btoa(unescape(encodeURIComponent(msg))),\n    color_code: color_code,\n    time_stamp: Date.now()\n  };\n  return format;\n}\n\n//  Youtube utils\n\nfunction handle_youtube(data) {\n  var state = window.global_this_obj.state;\n  if (state.youtube_video_id === \"\") {\n    window.global_this_obj.setState({\n      youtube_video_id: data.videoId,\n      youtube_current_pos: Math.ceil(data.startSeconds),\n      player_state: data.event\n    });\n  } else {\n    window.global_this_obj.setState({ isStateChangeFromBroadcastData: true });\n    const player = window.yt_player;\n\n    if (data.event === 2) {\n      // isStateChangeFromBroadcastData = true;\n      player.seekTo(data.startSeconds, true);\n      player.pauseVideo();\n      window.global_this_obj.notify(`${data.user_name} paused the video`);\n    } else if (data.event === 1) {\n      // isStateChangeFromBroadcastData = true;\n      player.seekTo(Math.ceil(data.startSeconds), true);\n      player.playVideo();\n      window.global_this_obj.notify(`${data.user_name} started the video`);\n    } else if (data.event === 3) {\n      // isStateChangeFromBroadcastData = true;\n      player.seekTo(data.startSeconds, true);\n      player.pauseVideo();\n      window.global_this_obj.notify(`${data.user_name} is buffering`);\n    } else if (data.event === \"playbackRateChange\") {\n      player.seekTo(data.startSeconds, true);\n      player.setPlaybackRate(data.playbackRate);\n      window.global_this_obj.notify(\n        `${data.user_name} changed the playback rate to ${data.playbackRate}x`\n      );\n    }\n    setTimeout(function() {\n      window.global_this_obj.setState({\n        isStateChangeFromBroadcastData: false\n      });\n    }, 2500);\n  }\n}\n\nexport function sync_video(event = null) {\n  if (\n    window.global_this_obj.state.only_host_controls === true &&\n    window.is_host !== true\n  ) {\n    return;\n  }\n  if (window.global_this_obj.state.isStateChangeFromBroadcastData) {\n    return;\n  }\n  const payloadData = fetch_current_video_status(event);\n  broadcastData(payloadData);\n}\n\nfunction fetch_current_video_status(event) {\n  var yt_event;\n  const player = window.yt_player;\n  if (event !== null) {\n    yt_event = event;\n  } else {\n    yt_event = player.getPlayerState();\n  }\n\n  var videoId = player.getVideoData()[\"video_id\"];\n  var startSeconds = player.getCurrentTime();\n  var playbackRate = player.getPlaybackRate();\n\n  var payload = {\n    data_type: \"youtube\",\n    user_name: window.global_this_obj.state.user_name,\n    event: yt_event,\n    videoId: videoId,\n    startSeconds: startSeconds,\n    playbackRate: playbackRate\n  };\n\n  return payload;\n}\n// {\n//   \"data_type\": \"chat|youtube|webrtc\",\n//   \"user_name\": \"Nishit\",\n//   \"user_type\": \"Host|Client\",\n//   \"message\": \"Test\",\n//   \"time_stamp\": \"ISO timestamp\"\n// }\n\n// misc\n\nfunction handle_intro(data) {\n  var connected_users = window.global_this_obj.state.connected_users;\n  connected_users[data.peer_id] = {\n    user_name: data.user_name,\n    color_code: data.color_code\n  };\n  window.global_this_obj.setState({ connected_users: connected_users });\n  window.global_this_obj.notify(`${data.user_name} has joined the party`);\n  if (window.is_host) {\n    update_data(window.peer_obj.id, \"connected_users\", connected_users);\n    setTimeout(function() {\n      sync_video();\n      var msg_user_list = {\n        data_type: \"user_list\",\n        user_list: window.global_this_obj.state.connected_users,\n        only_host_controls: window.global_this_obj.state.only_host_controls\n      };\n      broadcastData(msg_user_list);\n    }, 250);\n  }\n}\n\nfunction handle_intro_init(data) {\n  window.global_this_obj.setState({\n    connected_users: data.user_list,\n    only_host_controls: data.only_host_controls\n  });\n}\n\nexport function introduce(user_name, color_code) {\n  var format = {\n    data_type: \"intro\",\n    user_name: user_name,\n    peer_id: window.peer_obj.id,\n    color_code: color_code,\n    time_stamp: Date.now()\n  };\n  broadcastData(format);\n}\n\nexport function change_video(video_id, broadcast = false) {\n  var player = window.yt_player;\n  player.loadVideoById(video_id);\n  if (broadcast) {\n    var format = {\n      data_type: \"change_video\",\n      video_id: video_id\n    };\n    broadcastData(format);\n    // broadcast it to everyone\n  }\n}\n\nexport function parseIdFromURL(url) {\n  const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  const match = url.match(regExp);\n  if (match && match[2].length === 11) {\n    return match[2];\n  } else {\n    return false;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { createConnection, parseIdFromURL } from \"../utils/webRTC_utils\";\nimport { storeData } from \"../utils/data_storage_utils\";\n\nconst Host = () => {\n  const [userName, setUserName] = useState('');\n  const [videoUrl, setVideoUrl] = useState('');\n  const [clipboardHasVideo, setClipboardHasVideo] = useState(false);\n  const [hostPeerId, setHostPeerId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (navigator.clipboard) {\n      navigator.clipboard.readText()\n        .then(text => {\n          setClipboardHasVideo(parseIdFromURL(text));\n        });\n    }\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    createConnection(true).then((peerId) => {\n      setHostPeerId(peerId);\n    });\n  };\n\n  if (hostPeerId) {\n    const videoId = clipboardHasVideo ? clipboardHasVideo : parseIdFromURL(videoUrl);\n    storeData(hostPeerId, {\n      userName,\n      videoUrl,\n      videoId,\n      isHost: true,\n      onlyHostControls: false,\n    });\n    return (\n      <Redirect push to={{ pathname: hostPeerId }}/>\n    );\n  }\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <div className=\"card box\">\n              <div className=\"card-content\">\n                <form onSubmit={handleSubmit}>\n                  <div className=\"field\">\n                    <label className=\"label\">Username</label>\n                    <div className=\"control\">\n                      <input\n                        className=\"input\"\n                        placeholder=\"Please enter your username\"\n                        type=\"text\"\n                        value={userName}\n                        onChange={(e) => setUserName(e.target.value)}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"field\">\n                    <label className=\"label\">Youtube Link</label>\n                    <div className=\"field has-addons\">\n                      <div className=\"control\" style={{flex: '1'}}>\n                        <input\n                          className=\"input\"\n                          type=\"text\"\n                          placeholder={clipboardHasVideo ? 'Video found in clipboard!' : 'Youtube link'}\n                          onChange={(e) => {setVideoUrl(e.target.value)}}\n                          value={videoUrl}\n                        />\n                      </div>\n                      {clipboardHasVideo && (\n                        <p className=\"control\">\n                          <span className={`button ${videoUrl === '' ? 'is-primary' : 'is-static'}`}>\n                            <ion-icon name=\"clipboard-outline\" style={{marginRight: '0.5rem'}}></ion-icon>\n                            {clipboardHasVideo}\n                          </span>\n                        </p>\n                      )}\n                    </div>\n\n                  </div>\n\n                  <div className=\"field\">\n                    <label className=\"checkbox\">\n                      <input type=\"checkbox\" name=\"onlyHost\"/>\n                      &nbsp;Only allow host to control video\n                    </label>\n                  </div>\n                  <div className=\"buttons is-right\">\n                    <button\n                      className={\n                        \"button is-primary\" +\n                          (submitted ? \" is-loading\" : \"\")\n                      }\n                    >\n                      Party\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n  );\n};\n\nexport default Host;\n","import React from \"react\";\n\nclass ChatBubble extends React.Component {\n  render() {\n    return (\n      <div className=\"chat-bubble\">\n        <span className={`chat-name tag ${this.props.chat_data.color_code}`} >\n          {this.props.chat_data.user_name}\n        </span>\n        {this.props.chat_data.message}\n      </div>\n    );\n  }\n}\n\nexport default ChatBubble;\n","import React from \"react\";\n\nconst UserList = ({connectedUsers}) => {\n  return (\n    <div className=\"username-container\">\n      {Object.entries(connectedUsers).map(([_, userInfo]) =>\n        <span className={`tag ${userInfo.color_code}`}>{userInfo.user_name}</span>\n      )}\n      <span class=\"tag is-link is-light\">Queue (1/1)</span>\n    </div>\n  );\n};\n\nexport default UserList;\n","import React from \"react\";\nimport { send_chat } from \"../utils/webRTC_utils\";\nimport ChatBubble from \"./ChatBubble\";\nimport UserList from \"./UserList\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chatBottom = React.createRef();\n    this.state = {\n      message: '',\n    };\n  }\n\n  componentDidUpdate() {\n    this.chatBottom.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  add_text = e => {\n    this.setState({ message: e.target.value });\n  };\n\n  send_message = e => {\n    e.preventDefault();\n    if (this.state.message === \"\") {\n      return;\n    }\n    send_chat(\n      this.state.message,\n      this.props.user_name,\n      this.props.is_host,\n      this.props.color_code\n    );\n    this.setState({ message: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"chat-panel box\">\n        <UserList\n          connectedUsers={this.props.connected_users}\n          only_host_controls={this.props.only_host_controls}\n          is_host={this.props.is_host}\n        />\n        <div className=\"chat-message-panel\">\n          {this.props.chat_log.map((chat_data, index) => {\n            return <ChatBubble key={index} chat_data={chat_data}/>;\n          })}\n          <span ref={this.chatBottom} id=\"chat-bottom\" />\n        </div>\n        <form onSubmit={this.send_message}>\n          <div className=\"field is-grouped\">\n            <p className=\"control is-expanded\">\n              <input\n                className=\"input\"\n                value={this.state.message}\n                type=\"text\"\n                placeholder=\"Chat...\"\n                onChange={this.add_text}\n              />\n            </p>\n            <p className=\"control\">\n              <button className=\"button is-primary\">\n                <ion-icon name=\"paper-plane\"></ion-icon>\n              </button>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React from \"react\";\nimport ReactPlayer from 'react-player'\nimport { sync_video } from \"../utils/webRTC_utils\";\n\nconst USE_OLD_PLAYER = true;\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      player: \"\"\n    };\n  }\n  componentDidUpdate() {\n    if (this.state.player === \"\" && this.props.youtube_video_id !== \"\") {\n      this.loadScript();\n    }\n  }\n  loadScript = () => {\n    if (!window.YT) {\n      // If not, load the script asynchronously\n      const tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/iframe_api\";\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    } else {\n      // If script is already there, load the video directly\n      if (window.YT.Player) {\n        this.loadVideo();\n      }\n    }\n  };\n  loadVideo = () => {\n    const maxPlayerWidth = Math.round(window.innerWidth * (window.innerWidth > 768 ? 0.7 : 1));\n    const maxPlayerHeight = Math.round(window.innerHeight * 0.6);\n\n    const playerWidth = Math.min(Math.round(maxPlayerHeight * 16/9), maxPlayerWidth);\n    const playerHeight = Math.min(Math.round(maxPlayerWidth * 9/16), maxPlayerHeight);\n\n    this.state.player = new window.YT.Player('youtube-player-iframe', {\n      videoId: this.props.youtube_video_id,\n      width: playerWidth,\n      height: playerHeight,\n      playerVars: {\n        start: Math.ceil(this.props.youtube_current_pos)\n      },\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange,\n        onPlaybackRateChange: this.onPlayerPlaybackRateChange\n      }\n    });\n    window.yt_player = this.state.player;\n  };\n\n  onPlayerReady = event => {\n    if (this.props.player_state === 1) {\n      event.target.playVideo();\n    }\n  };\n  onPlayerStateChange = event => {\n    if (!this.props.isStateChangeFromBroadcastData) {\n      if (\n        event.data === window.YT.PlayerState.PLAYING ||\n        event.data === window.YT.PlayerState.PAUSED\n      ) {\n        sync_video();\n      }\n    }\n  };\n  onPlayerPlaybackRateChange = event => {\n    console.log(event);\n    if (this.props.is_host) {\n      sync_video(\"playbackRateChange\");\n    }\n  };\n  render() {\n    // if (!this.props.youtube_video_id) {\n    //   return <div>Video not loaded</div>;\n    // }\n    return USE_OLD_PLAYER ? (\n      <div className=\"player_container\">\n        <div id={`youtube-player-iframe`} />\n      </div>\n    ) : (\n      <div class=\"video-player-wrapper\">\n        <ReactPlayer\n          className=\"video-player\"\n          url={this.props.videoUrl}\n          width='100%'\n          height='100%'\n          controls\n        />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React from \"react\";\nimport { change_video, parseIdFromURL } from \"../utils/webRTC_utils\";\n\nclass ChangeVideo extends React.Component {\n  changeVideo = e => {\n    e.preventDefault();\n    let video_url = e.target.video_url.value;\n    let video_id = parseIdFromURL(video_url);\n    if (video_id) {\n      change_video(video_id, true);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"box info_box\">\n        <div className=\"\">\n          <form onSubmit={this.changeVideo}>\n            <div className=\"field is-grouped\">\n              <p className=\"control is-expanded\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"video_url\"\n                  placeholder=\"Enter new video URL\"\n                  required\n                />\n              </p>\n              <p className=\"control\">\n                <button className=\"button is-primary\">Change</button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChangeVideo;\n","import React from \"react\";\nimport ChatPanel from \"./Chat\";\nimport Player from \"./Player\";\nimport ChangeVideo from \"./ChangeVideo\";\n\nimport { get_data } from \"../utils/data_storage_utils\";\nimport {\n  createConnection,\n  introduce,\n  bulk_connect\n} from \"../utils/webRTC_utils\";\nimport { ToastContainer, toast } from \"react-toastify\";\n// css\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nfunction getRandomTagColor() {\n  const bulmaTagColors = ['is-black', 'is-dark', 'is-light', 'is-primary', 'is-link', 'is-info', 'is-success', 'is-warning', 'is-danger'];\n  return bulmaTagColors[Math.floor(Math.random() * bulmaTagColors.length)];\n}\n\n// https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\nclass Party extends React.Component {\n  state = {\n    user_name: \"\",\n    youtube_video_id: \"\",\n    youtube_current_pos: 0,\n    peer_id: \"\",\n    is_host: false,\n    chat_log: [],\n    invite_popup_shown: false,\n    connected_users: {},\n    color_code: \"\",\n    isStateChangeFromBroadcastData: false,\n    player_state: false\n  };\n\n  constructor(props) {\n    super(props);\n    window.global_this_obj = this;\n    window.connections = [];\n  }\n\n  componentDidMount() {\n    const hostId = this.props.match.params.host_id;\n    const data = get_data(hostId);\n    const colorCode = getRandomTagColor();\n\n    const connected_users = data.connected_users || {};\n    const reconnect_users = JSON.parse(JSON.stringify(connected_users));\n\n    // i.e if host\n    if (data) {\n      if (!window.peer_obj) {\n        createConnection(true, null, hostId);\n      }\n\n      if (!data.connected_users) {\n        connected_users[hostId] = {\n          user_name: data.userName,\n          color_code: colorCode,\n          is_host: true\n        };\n      } else {\n        delete reconnect_users[hostId];\n        bulk_connect(\n          Object.keys(reconnect_users),\n          connected_users[hostId]\n        );\n      }\n\n      this.setState({\n        peer_id: hostId,\n        user_name: data.userName,\n        videoUrl: data.videoUrl,\n        youtube_video_id: data.videoId,\n        only_host_controls: data.onlyHostControls,\n        is_host: data.isHost,\n        connected_users: connected_users,\n        color_code: colorCode,\n      });\n    } else {\n      // Not a host: Create connection\n      createConnection(false, hostId);\n    }\n  }\n\n  setUserName = e => {\n    e.preventDefault();\n    const color_code = getRandomTagColor();\n    const connected_users = this.state.connected_users;\n    connected_users[this.state.peer_id] = {\n      user_name: e.target.user_name.value,\n      color_code: color_code,\n      is_host: false\n    };\n    this.setState({\n      user_name: e.target.user_name.value,\n      connected_users: connected_users,\n      color_code: color_code\n    });\n    introduce(e.target.user_name.value, color_code);\n  };\n\n  copyToClipboard = e => {\n    e.preventDefault();\n    this.copy_invite.select();\n    document.execCommand(\"copy\");\n    this.setState({ invite_popup_shown: true });\n  };\n\n  closeModal = e => {\n    this.setState({ invite_popup_shown: true });\n  };\n\n  notify = (message, timeout = 3000) => {\n    toast.info(message, {\n      position: \"bottom-left\",\n      autoClose: timeout,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      toastId: message\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"party-container\">\n        <ToastContainer\n          position=\"bottom-left\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss={false}\n          draggable\n          pauseOnHover\n        />\n        <div\n          className={\n            \"modal   \" + (this.state.user_name === \"\" ? \"is-active\" : \"\")\n          }\n        >\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-content\">\n            <div className=\"box\">\n              <form onSubmit={this.setUserName}>\n                <div className=\"field is-grouped\">\n                  <p className=\"control is-expanded\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      name=\"user_name\"\n                      placeholder=\"Enter Your Username\"\n                      required\n                    />\n                  </p>\n                  <p className=\"control\">\n                    <button className=\"button is-primary\">Party</button>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n          <button className=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n\n        <div className={\"modal \" + (this.state.invite_popup_shown ? \"is-active\" : \"\")}>\n          <div className=\"modal-background\" onClick={this.closeModal}></div>\n          <div className=\"modal-content\">\n            <div className=\"box\">\n              <form onSubmit={this.copyToClipboard}>\n                <label>Share this link with friends to watch YouTube together</label>\n\n                <div className=\"field is-grouped\">\n                  <p className=\"control is-expanded\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      value={window.location.href}\n                      name=\"invite_link\"\n                      readOnly\n                      ref={copy_invite => (this.copy_invite = copy_invite)}\n                    />\n                  </p>\n                  <p className=\"control\">\n                    <button className=\"button is-primary\">\n                      <span role=\"img\" aria-label=\"cliboard_emoji\">\n                        📋\n                      </span>\n                      &nbsp;Copy Invite Link\n                    </button>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n          <button\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n            onClick={this.closeModal}\n          />\n        </div>\n\n        <div>\n          <Player\n            videoUrl={this.state.videoUrl}\n            youtube_video_id={this.state.youtube_video_id}\n            youtube_current_pos={this.state.youtube_current_pos}\n            is_host={this.state.is_host}\n            isStateChangeFromBroadcastData={\n              this.state.isStateChangeFromBroadcastData\n            }\n            player_state={this.state.player_state}\n          />\n          {(this.state.only_host_controls === false || this.state.is_host === true) && <ChangeVideo/>}\n        </div>\n        <ChatPanel\n          connected_users={this.state.connected_users}\n          only_host_controls={this.state.only_host_controls}\n          user_name={this.state.user_name}\n          chat_log={this.state.chat_log}\n          is_host={this.state.is_host}\n          color_code={this.state.color_code}\n        />\n      </div>\n    );\n  }\n}\nexport default Party;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Host from \"./Host\";\nimport Party from \"./Party\";\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Host} />\n      <Route exact path=\"/:host_id\" component={Party} />\n    </Switch>\n  </HashRouter>\n);\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.scss\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}